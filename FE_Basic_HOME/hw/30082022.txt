1. Опишите базовые CSS-селекторы.

* – селектор для любых элементов.
div (a, h, p и другие) – селектор для указанных тегов тегом.
#id – селектор для элемент с указанным id
.class – селектор для элемента с таким классом.

Мог бы описать приоритет селекторов, но в вопросе про это не спрашивается ))

2.Опишите способ определения и применения CSS-переменных (на примере).

Переменные удобно применять для элементов, короые очень часто используются и как бы глобальные для всего сайта.
Например цвет основного шрифта или цвет фона. Удобство заключается в том, что при вознекшей потребности изменить глобальный стиль, 
например цвет шрифта для всего сайта будет достаточно изменить 1 раз в одном месте - в переменной

Описание переменной в файле .css, обычно в самом начале style.css
:root {
         --text-color: rgb(255, 255, 255); 
      }

div {
     color: var(--text-color);   
    }

3. Опишите несколько семантических HTML-тегов и примеры их использования.
Семантические теги хорошо читаются поисковыми роботами, а также различными ридерами, что позволяет лучше понимать структуру сайта для роботов и ридеров

основные семантические теги
<header> - заголовок сайта
<main> - основная часть сайта. В этой области как правило применяется и <section> - смысловое разделение кода
<footer> - подвал сайта
<nav> - тег меню
<aside> - боковое меню
и много других

4. Опишите разницу в значениях CSS-свойства position: static/absolute/fixed/sticky.
static - свойство по умолчанию и обычно его и не пишут/не указывают
absolute - абсолютное позиционирование относительно родительского блока. Очень удобно, когда необходимо элемент спозиционировать не все страницы, а именно блока, который для элемента является родительским.
fixed - фиксирование позиционирование относительно окна просмотра, как правило используется для меню - листая сайт наше меню остается всегда на экране. Т.е. изначально элемент с таким позиционированием приклеен к одному месту экрана и с него не сдвигается. 
sticky - почти тоже самое, что fixed, но позиционируется относительно родительского эелемента. Например большой блок с текстом и к нему боковая подсказка, прокручивая текст мы имеем этот элемент, как бы на одном месте.
Как только при прокрутке блок заканчивается, то элемент также уходит/прокручивается вместе с родительским блоком